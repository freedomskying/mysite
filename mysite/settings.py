"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""
# django suit menu setting
from . import admin_settings
import logging
import django.utils.log
import logging.handlers

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'z5!q71!vlzmm&1tq-c-#4$f71tq7j*+t$hid769$e%$8%-4w%*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    #    'bootstrap_admin',
    'suit',
    'polls.apps.PollsConfig',
    'article.apps.ArticleConfig',
    'restapp.apps.RestappConfig',
    'watchlist.apps.WatchlistConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.github',
    'allauth.socialaccount.providers.baidu',
    'rest_framework',
    'myrestaurants',
    'smartdoc',
    'widget_tweaks',
    'portal',
    # 'silk',
]

SITE_ID = 1

# add bootstrap_admin setting
# from django.conf import global_settings
# TEMPLATE_CONTEXT_PROCESSORS = global_settings.TEMPLATE_CONTEXT_PROCESSORS + ('django.core.context_processros.request',)
# BOOTSTRAP_ADMIN_SIDEBAR_MENU = True

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'silk.middleware.SilkyMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# BOOTSTRAP_ADMIN_SIDEBAR_MENU = True

WSGI_APPLICATION = 'mysite.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        # 'ENGINE': 'django.db.backends.oracle',
        # 'NAME': '10.100.2.35:1521/ORCLPDB',
        # 'USER': 'django',
        # 'PASSWORD': 'django',
    },
    # 'local12c': {
    #     'ENGINE': 'django.db.backends.oracle',
    #     'NAME': 'wkxtedw',
    #     'USER': 'scott',
    #     'PASSWORD': 'tiger',
    #     'HOST': '10.10.22.39',
    #     'PORT': '1521',
    # },
    'watchlist': {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': '10.100.2.35:1521/ORCLPDB',
        'USER': 'wluser',
        'PASSWORD': 'wluser',
        'CONN_MAX_AGE': 60,
    },
    'scottdb': {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': '10.100.2.35:1521/ORCLPDB',
        'USER': 'scott',
        'PASSWORD': 'tiger',
    },
    # 'wkxtedw_prd': {
    #     'ENGINE': 'django.db.backends.oracle',
    #     'NAME': 'ORCLPDB',
    #     'USER': 'wluser',
    #     'PASSWORD': 'wluser',
    #     'HOST': '10.100.2.35',
    #     'PORT': '1521',
    # },
}

# use multi-database in django
# add by WeizhongTu
DATABASE_ROUTERS = ['mysite.database_router.DatabaseAppsRouter']
DATABASE_APPS_MAPPING = {
    # example:
    # 'app_name':'database_name',
    'watchlist': 'watchlist',
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static"), ]

# specify media root for user uploaded files,
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Email POP3/SMTP 配置 - QQ邮箱
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 25  # 或者 995是设置了 SSL 加密方式
EMAIL_HOST_USER = '501254772@qq.com'  # 发送邮件的邮箱
EMAIL_HOST_PASSWORD = 'poxdyoqdtqzxbhae'  # 在邮箱中设置的客户端授权密码，如果重新设置了新的授权码,直接使用最新的授权码即可
EMAIL_USE_TLS = True  # 这里必须是 True，否则发送不成功
EMAIL_FROM = '501254772@qq.com'  # 收件人看到的发件人
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER  # EMAIL_HOST_USER 默认值为webmaster@localhost 需要修改，否则报501错误

# allauth configuration
# ACCOUNT_SIGNUP_FORM_CLASS = 'myaccounts.forms.SignupForm'

# django-suit configuration start

# suit在admin里设置时间的一个小bug。需要把时间格式指定一下
DATETIME_FORMAT = 'Y-m-d H:i:s'
DATE_FORMAT = 'Y-m-d'

# 语言设置成中文
LANGUAGE_CODE = 'zh-Hans'
TIME_ZONE = 'Asia/Shanghai'
USE_I18N = True
USE_L10N = False
USE_TZ = True

# django-suit configuration end

# LOGIN_URL配置
LOGIN_URL = '/portal/login/'

# LOGIN_URL配置 END

# LOGGING CONFIGURATION
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'}
        # 日志格式
    },
    'filters': {
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True,
        },
        'default': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'D:\\tmp\\log\\all.log',  # 日志输出文件
            'maxBytes': 1024 * 1024 * 5,  # 文件大小
            'backupCount': 5,  # 备份份数
            'formatter': 'standard',  # 使用哪种formatters日志格式
        },
        'error': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'D:\\tmp\\log\\error.log',
            'maxBytes': 1024 * 1024 * 5,
            'backupCount': 5,
            'formatter': 'standard',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
        'request_handler': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'D:\\tmp\\log\\script.log',
            'maxBytes': 1024 * 1024 * 5,
            'backupCount': 5,
            'formatter': 'standard',
        },
        'scprits_handler': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'D:\\tmp\\log\\script.log',
            'maxBytes': 1024 * 1024 * 5,
            'backupCount': 5,
            'formatter': 'standard',
        }
    },
    'loggers': {
        'django': {
            'handlers': ['default', 'console'],
            'level': 'INFO',
            'propagate': False
        },
        'django.request': {
            'handlers': ['request_handler'],
            'level': 'INFO',
            'propagate': False,
        },
        'scripts': {
            'handlers': ['scprits_handler'],
            'level': 'INFO',
            'propagate': False
        },
        'watchlist.views': {
            'handlers': ['default', 'error'],
            'level': 'INFO',
            'propagate': True
        },
        'portal.views': {
            'handlers': ['error'],
            'level': 'ERROR',
            'propagate': True
        }
    }
}
# Logging Configuration End

# REST_FRAMEWORK Configuration Start
# REST_FRAMEWORK = {
#     'DEFAULT_PERMISSION_CLASSES': (
#         'rest_framework.permissions.IsAuthenticated',
#     )
# }
# REST_FRAMEWORK Configuration End

# django silk configuration Start
# STATIC_ROOT = os.path.join(BASE_DIR, 'silk')

# 使用Python的内置cProfile分析器
SILKY_PYTHON_PROFILER = True
# 生成.prof文件，silk产生的程序跟踪记录，详细记录来执行来哪个文件，哪一行，用了多少时间等信息
SILKY_PYTHON_PROFILER_BINARY = True
# .prof文件保存路径（最好不要像我这样设置在项目目录中）
# 如果没有本设置，prof文件将默认保存在MEDIA_ROOT里
SILKY_PYTHON_PROFILER_RESULT_PATH = os.path.join(BASE_DIR, 'logs')

# django silk configuration end
